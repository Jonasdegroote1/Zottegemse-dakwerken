<?php

use Drupal\node\Entity\NodeType;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_install().
 */
function inventory_system_install() {
  // Create content type.
  if (!NodeType::load('inventory_item')) {
    $inventory_item = NodeType::create([
      'type' => 'inventory_item',
      'name' => 'Inventory Item',
      'description' => 'An item in the inventory.',
    ]);
    $inventory_item->save();

    // Create fields for the content type.
    $fields = [
      'field_item_name' => ['type' => 'string', 'label' => 'Item Name'],
      'field_description' => ['type' => 'text_long', 'label' => 'Description'],
      'field_quantity' => ['type' => 'integer', 'label' => 'Quantity'],
      'field_location' => ['type' => 'string', 'label' => 'Location'],
      'field_price' => ['type' => 'decimal', 'label' => 'Price', 'settings' => ['precision' => 10, 'scale' => 2]],
    ];

    foreach ($fields as $field_name => $field_info) {
      FieldStorageConfig::create([
        'field_name' => $field_name,
        'entity_type' => 'node',
        'type' => $field_info['type'],
        'settings' => $field_info['settings'] ?? [],
      ])->save();

      FieldConfig::create([
        'field_storage' => FieldStorageConfig::loadByName('node', $field_name),
        'bundle' => 'inventory_item',
        'label' => $field_info['label'],
        'settings' => $field_info['settings'] ?? [],
      ])->save();
    }
  }
}
