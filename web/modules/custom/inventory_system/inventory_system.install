<?php

use Drupal\Core\Database\Database;

/**
 * Implements hook_install().
 */
function inventory_system_install() {
  // Create the categories table.
  if (!Database::getConnection()->schema()->tableExists('categories')) {
    $categorySchema = [
      'fields' => [
        'category_id' => [
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'The auto-incremented ID for a category.',
        ],
        'title' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'description' => 'The title of the category.',
        ],
      ],
      'primary key' => ['category_id'],
    ];

    // Create the categories table.
    Database::getConnection()->schema()->createTable('categories', $categorySchema);
  }

  // Create the items table.
  if (!Database::getConnection()->schema()->tableExists('items')) {
    $itemSchema = [
      'fields' => [
        'item_id' => [
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'The auto-incremented ID for an inventory item.',
        ],
        'title' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'description' => 'The name of the inventory item.',
        ],
        'description' => [
          'type' => 'text',
          'size' => 'big',
          'not null' => FALSE,
          'description' => 'Description of the inventory item.',
        ],
        'quantity' => [
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => 'The quantity of the inventory item.',
        ],
        'location' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
          'description' => 'The location of the inventory item.',
        ],
        'category_id' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The auto-incremented ID for the category of the inventory item.',
        ],
      ],
      'primary key' => ['item_id'],
      'foreign keys' => [
        'category_id' => [
          'table' => 'categories',
          'columns' => ['category_id'],
        ],
      ],
    ];

    // Create the items table.
    Database::getConnection()->schema()->createTable('items', $itemSchema);
  }

  // Create the vehicles table.
  if (!Database::getConnection()->schema()->tableExists('vehicles')) {
    $vehicleSchema = [
      'fields' => [
        'vehicle_id' => [
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'The auto-incremented ID for a vehicle.',
        ],
        'name' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'description' => 'The name of the vehicle.',
        ],
      ],
      'primary key' => ['vehicle_id'],
    ];

    // Create the vehicles table.
    Database::getConnection()->schema()->createTable('vehicles', $vehicleSchema);
  }

  // Create the item_vehicle table.
  if (!Database::getConnection()->schema()->tableExists('item_vehicle')) {
      $itemVehicleSchema = [
          'fields' => [
              'item_vehicle_id' => [
                  'type' => 'serial',
                  'not null' => TRUE,
                  'description' => 'The auto-incremented ID for an item-vehicle relation.',
              ],
              'item_id' => [
                  'type' => 'int',
                  'not null' => TRUE,
                  'description' => 'The ID of the inventory item.',
              ],
              'vehicle_id' => [
                  'type' => 'int',
                  'not null' => TRUE,
                  'description' => 'The ID of the vehicle.',
              ],
              'quantity' => [
                  'type' => 'int',
                  'not null' => TRUE,
                  'default' => 0,
                  'description' => 'The quantity of the inventory item in the vehicle.',
              ],
              'date' => [
                  'type' => 'varchar',
                  'length' => 10,
                  'not null' => TRUE,
                  'description' => 'The date when the item was added to the vehicle.',
              ],
          ],
          'primary key' => ['item_vehicle_id'],
          'foreign keys' => [
              'item_id' => [
                  'table' => 'items',
                  'columns' => ['item_id'],
              ],
              'vehicle_id' => [
                  'table' => 'vehicles',
                  'columns' => ['vehicle_id'],
              ],
          ],
      ];
      Database::getConnection()->schema()->createTable('item_vehicle', $itemVehicleSchema);
  }


}
